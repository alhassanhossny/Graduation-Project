courses = {"IT Fundamentals": ["Credits: 3 Hours", "Prerequisites: without",
                               "Contents:Introduction: Brief history of computing; the components of a computing system.Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; signed and twos-complement representations; fundamental operations on bits; representation of nonnumeric data. "],
           "Mathematics I": ["Credits: 3 Hours", "Prerequisites: without",
                             "Contents: Pre-calculus review: sets and functions; limits and continuity − Derivatives: techniques of differentiation; derivatives of the basic and fundamental functions; implicit differentiation; linear approximation and differentials; extreme of functions; optimization problems; velocity and acceleration − Integrals: indefinite integrals; change of variables; definite integrals; the fundamental theorem of calculus − Techniques of integration: integration by parts; trigonometric integrals and substitutions; integrals of rational functions − Numerical integration − Applications of definite integrals. Digital logic: Switching circuits; gates; memory. Assembly level machine organization: Basic organization of the von Neumann machine; control unit; instruction fetch, decode, and execution; instruction sets and types; assembly/machine language programming; instruction formats. Hardware realizations of algorithms: Data representation; the von Neumann model of computation; the fetch/decode/execute cycle; basic machine organization. Operating systems and virtual machines: Historical evolution of operating systems; responsibilities of an operating system; basic components of an operating system. Computing applications: Word processing; spreadsheets; editors; files and directories. Introduction to net-centric computing: Background and history of networking and the Internet; demonstration and use of networking software including e-mail, telnet, and FTP."],
           "Physics I": ["Credits: 3 Hours", "Prerequisites: without",
                         "Contents: Mechanics: Physics and measurements; Motion in one dimension; Vectors; Motion in two dimensions; Laws of motion; Circular motion and its applications; Work and energy; Potential energy and conservation of energy; Linear momentum and collision; Rotation of a rigid body; Rolling motion; Law of gravity. Waves: Oscillatory motion; Wave motion; Sound waves."],
           "Electronics": ["Credits: 3 Hours", "Prerequisites: without",
                           "Contents: Electrical circuit laws and theorems: Ohm’s Kirchhoff’s, mesh, nodal, Thevenin’s maximum power transfer theorems for both DC and AC circuits , R, L, C elements. Electronic components and circuits diodes − bipolar junction transistors − field-effect transistors and use of transistors in amplifiers. OP-Amp, digital circuits − physical design of simple gates − flip-flops and memory circuits."],
           "English Language I": ["Credits: 2 Hours", "Prerequisites: without",
                                  "Contents: The material reflects the stylistic variety that advanced earners have to be able to deal with. The course gives practice in specific points of grammar to consolidate and extend learners existing knowledge. Analysis of syntax; comprehension; skimming and scanning exercises develop the learner’s skills, comprehension questions interpretation and implication. The activities aim to develop listening, speaking and writing skills through a communicative, functional approach, with suggested topics for discussion and exercises in summary writing and composition. "],
           "Hand Drawing": ["Credits: 2 Hours", "Prerequisites: without",
                            "Contents: Introduction and proportions - Gestalt theory and gestural drawing - Blind contour drawing - Using light and dark; discovering mass drawing; using negative space as a tool to create atmosphere and shape - Exploring different mediums and paper - Conclusion and final portfolio drawing."],
           "History of Computing": ["Credits: 3 Hours", "Prerequisites: without",
                                    "Contents: Prehistory—the world before 1946; Implications of: History of computer hardware, software; History of the Internet; Telecommunications ; The IT profession; IT education; Pioneers of computing."],
           "Social Context of Computing": ["Credits: 1 Hours", "Prerequisites: without",
                                           "Contents: Introduction to the social implications of computing − Social informatics − Social impact of IT on society − Social implications of networked communication − Growth of, control of, and access to the Internet − International issues – Online communities & social implications − Philosophical context − Diversity issues − Gender-related issues − Cultural issues − Accessibility issues − Globalization issues − Economic issues in computing −Digital divide "],
           "Programming Fundamentals": ["Credits: 3 Hours", "Prerequisites: IT Fundamentals",
                                        "Contents: Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment − Simple I/O − Conditional and iterative control structures − Functions and parameter passing − Structured decomposition − Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms − Fundamental data structures − Machine level representation of data − Human-computer interaction: Introduction to design issues − Software development methodology: Fundamental design concepts and principles; structured design; testing and debugging strategies; test-case design; programming environments; testing and debugging tools."],
           "Mathematics II": ["Credits: 3 Hours", "Prerequisites: Mathematics I",
                              "Contents: Partial fractions − Infinite series: sequences, convergent and divergent series, positive-term series, tests of convergence, alternating series and absolute convergence, power series, power series representations of functions, Maclauran and Taylor series − Differential equations: definition, classifications and terminology, techniques of solution of ordinary first–order linear differential equations – Matrices − Linear equations − Vector spaces, inner product spaces − Linear transformations − Eigen-values and eigenvectors."],
           "Physics II": ["Credits: 3 Hours", "Prerequisites: without",
                          "Contents: Physical optics: Interference, diffraction and polarization.Magnetic fields: Definitions and properties; Sources of magnetic fields; electromagnetic waves; The four Maxwell’s equations.Selected topics: Introduction to modern physics and applications, Molecules and solids; Semiconductors and semiconductors devices; Superconductivity."],
           "Digital Circuits": ["Credits: 2 Hours", "Prerequisites: without",
                                "Contents: Numbering systems, logic functions and logic gates, Boolean algebra.Computational circuits: Simplification of logic circuits using Karnaugh maps and tabulation method. Gate level design, adders, subtractors, encoders and decoders, multiplexers and demultiplexers. MSI Design, Programmable devices (ROM, PAL, PLA, ....).Sequential circuits: Flip-flops, latches, analysis and design of simple sequential circuits, state tables and state diagrams, counters, registers, RAMs. Integrated circuits and logic families."],
           " Interpersonal Communication": ["Credits: 2 Hours", "Prerequisites: without",
                                            "Contents: Elements of the communication process, barriers to communications, effective writing skills, report writing, and oral presentation skills. Good diction, extempore speaking in the appropriate context will be key skills in this course."],
           "Human Rights": ["Credits: 1 Hours", "Prerequisites: without",
                            "Contents: Ethical and legal basis for privacy protection; Privacy implications of computer and information systems; Technological strategies for privacy protection; Freedom of expression in cyberspace; International and intercultural implications."],
           "English Language II": ["Credits: 2 Hours", "Prerequisites: English Language I",
                                   "Contents: The course aims at enabling the students to further polish and develop their skills in English language through various interactive activities. The need for more articulate written English is reinforced through further in depth study of applied grammar. Again a conversational and situational dialogue based contents are presented to attract students’ interest. Pronunciations and comparatively complex grammar are simultaneously introduced. Field related terminology and longer conversations are also presented with emphasis on contrastive grammar and a more articulate pronunciation."],
           "Computer Law": ["Credits: 1 Hours", "Prerequisites: without",
                            "Contents: History and examples of computer crime − ―Cracking‖ (―hacking‖) and its effects − Viruses, worms, and Trojan horses − Crime prevention strategies − System use policies & monitoring − Risks and liabilities of computer-based systems − Accountability, responsibility, liability. "],
           "Discrete Structures": ["Credits: 3 Hours", "Prerequisites: Mathematics II",
                                   "Contents: Introduction to logic and proofs − Fundamental structures: Functions; relations; sets; cardinality and countability − Boolean algebra − Propositional logic: Logical connectives; truth tables; normal forms; validity − Elementary number theory: Factorability; properties of primes; greatest common divisors and least common multiples; Euclid’s algorithm; modular arithmetic; the Chinese Remainder Theorem − Basics of counting: Counting arguments; pigeonhole principle; permutations and combinations; binomial coefficients − Predicate logic: Universal and existential quantification; modus ponens and modus tollens; limitations of predicate logic − Recurrence relations: Basic formulae; elementary solution techniques − Graphs and trees: Fundamental definitions; simple algorithms; traversal strategies; proof techniques; spanning trees; applications."],
           "Object-Oriented Programming": ["Credits: 3 Hours", "Prerequisites: Programming Fundamentals",
                                           "Contents: Introduction to object-oriented programming − Using an object-oriented language; classes and objects; syntax of class definitions; methods; members − Simple data: variables, types, and expressions; assignment − Control structures: Iteration; conditionals − Message passing: Simple methods; parameter passing – Sub-classing; encapsulation and information hiding; separation of behavior and implementation; class hierarchies; inheritance; polymorphism − Collection classes and iteration protocols − Using APIs: Class libraries; packages for graphics and GUI applications − Object-oriented design: Fundamental design concepts and principles; introduction to design patterns; object-oriented analysis and design; design for reuse ."],
           "Project Management": ["Credits: 2 Hours", "Prerequisites: IT Fundamentals",
                                  "Contents: Managing the system life cycle: requirements determination, design, implementation; system and database integration issues; network management; project tracking, metrics, and system performance evaluation; managing expectations of managers, clients, team members, and others; determining skill requirements and staffing; cost-effectiveness analysis; reporting and presentation techniques; management of behavioral and technical aspects of the project; change management. Software tools for project tracking and monitoring. Team collaboration techniques and tools."],
           "Data Communications": ["Credits: 3 Hours", "Prerequisites: IT Fundamentals",
                                   "Contents: Communication models, Data communication, networks, protocol architectures. Data Transmission, Transmission media wired and wireless, transmission impairment. Encoding and modulating baseband, Digital and analog modulation. Flow control and Error control. Multiplexing."],
           "Technical Writing": ["Credits: 2 Hours", "Prerequisites: English Language I",
                                 "Contents: General Principles of Good Writing − Design and Usability − Documentation Development Process − Writing Procedures − Aspects of the Language − Obstacles to Readability − Writing Reports − Practices in Technical Writing "],
           "Foundations of Information Systems": ["Credits: 3 Hours", "Prerequisites: IT Fundamentals",
                                                  "Contents: Information systems components. Information systems in organizations: Characteristics of IS professionals, IS career paths, Cost/value information, Quality of information, competitive advantage of information, IS and organizational strategy, Value chains and networks. Globalization. Valuing information systems: Investment evaluation, Multi-criteria analysis, Cost-benefit analysis, Identifying and implementing innovations. E-business: B-to-C, B-to-B, Intranets, Internet, extranets, E-government, Web 2.0 Technologies: e.g., wikis, tags, blogs, netcasts, self-publishing, New forms of collaboration: social networking, virtual teams, viral marketing crowd-sourcing. Security of information systems: Threats to information systems, Technology-based safeguards. Business intelligence: Organizational decision making, functions, and levels, Executive, managerial, and operational levels, Systems to support organizational functions and decision making. Information and knowledge discovery: Reporting systems, Online analytical processing, Data, text, and Web mining, Business analytics. Application systems: Executive, managerial, and operational support systems, Decision support systems."],
           "Business Administration": ["Credits: 2 Hours", "Prerequisites: without",
                                       "Contents: Management concepts, level and types of management, planning and organization of work flow, delegation, leadership styles, decision making, stress and time management, and employee relations, decision-making in such areas as investment in operations, productions planning, scheduling and control, reliability and maintenance. "],
           "Data Structures and Algorithms": ["Credits: 3 Hours", "Prerequisites: Object-Oriented Programming",
                                              "Contents: Review of elementary programming concepts − Fundamental data structures: Stacks; queues; linked lists; hash tables; trees; graphs − Basic algorithmic analysis: big ―O,‖ little ―o,‖ omega, and theta notation − Fundamental computing algorithms: O(N log N) sorting algorithms; hash tables, including collision-avoidance strategies; binary search trees; representations of graphs; depth- and breadth-first traversals − Recursion and divide-and-conquer strategies − Basic algorithmic strategies: Brute-force algorithms; greedy algorithms; divide and conquer; backtracking − Standard complexity classes."],
           "Databases": ["Credits: 3 Hours", "Prerequisites: Programming Fundamentals",
                         "Contents: Database systems: History and motivation for database systems; components of database systems; DBMS functions; database architecture and data independence. Data modeling: Data modeling; conceptual models; object-oriented model; relational data model. Relational databases: Mapping conceptual schema to a relational schema; entity and referential integrity; relational algebra and relational calculus. Database query languages: Overview of database languages; SQL; query optimization; 4th-generation environments; embedding non-procedural queries in a procedural language; introduction to Object Query Language. Relational database design: Database design; functional dependency; normal forms; multivalued dependency; join dependency; representation theory."],
           "Computer Architecture": ["Credits: 3 Hours",
                                     "Prerequisites: Discrete Structures and Programming Fundamentals",
                                     "Contents: Register transfer notation; physical considerations (gate delays, fan-in, fan-out). Assembly level organization: Basic organization of the von Neumann machine; control unit; instruction fetch, decode, and execution; instruction sets and types (data manipulation, control, I/O); assembly/machine language programming; instruction formats; addressing modes; subroutine call and return mechanisms; I/O and interrupts. Memory systems: Storage systems and their technology; coding, data compression, and data integrity; memory hierarchy; main memory organization and operations; latency, cycle time, bandwidth, and interleaving; cache memories (address mapping, block size, replacement and store policy); virtual memory (page table, TLB); fault handling and reliability. Interfacing and communication: I/O fundamentals: handshaking, buffering, programmed I/O, interrupt-driven I/O; interrupt structures: vectored and prioritized, interrupt acknowledgment; external storage, physical organization, and drives; buses: bus protocols, arbitration, direct-memory access (DMA); introduction to networks; multimedia support; raid architectures. Functional organization: Implementation of simple datapaths; control unit: hardwired realization vs. microprogrammed realization; instruction pipelining; introduction to instruction-level parallelism (ILP). Multiprocessor and alternative architectures: Introduction to SIMD, MIMD, VLIW, EPIC; systolic architecture; interconnection networks; shared memory systems; cache coherence; memory models and memory consistency. Performance enhancements: RISC architecture; branch prediction; prefetching; scalability. Contemporary architectures: Hand-held devices; embedded systems; trends in processor architecture."],
           "Probability and Statistics": ["Credits: 2 Hours", "Prerequisites: Mathematics II",
                                          "Contents: Introduction to probability: Basic concepts; Properties of probability; Conditional probability and independence; Total probability and Bayes’ rule; Random variables; Probability distributions. Introduction to statistical analysis: Sampling and sampling distributions; Point estimation; Methods of moments and maximum likelihood; Interval estimation; Least squared concept; Testing hypotheses; Statistical tests. Applications: Statistical software packages; Applications of statistics to reliability engineering."],
           "Computers and Ethics": ["Credits: 1 Hours", "Prerequisites: without",
                                    "Contents: Community values and the laws by which we live − The nature of professionalism in computing − Various forms of professional credentialing and the advantages and disadvantages − The role of the professional in public policy − Maintaining awareness of consequences − Ethical dissent and whistle-blowing − Codes of ethics, conduct, and practice (IEEE, ACM, SE, AITP, and so forth) − Dealing with harassment and discrimination − ―Acceptable use‖ policies for computing in the workplace."],
           "Systems Analysis and Design": ["Credits: 3 Hours", "Prerequisites: IT Fundamentals",
                                           "Contents: Information requirements: Structuring of IT-based opportunities into projects; Project specification; Project prioritization; Analysis of project feasibility. Operational, Tangible costs and benefits (financial and other measures such as time savings), Intangible costs and benefits such as good will, company image: Technical; Schedule; Cultural (organizational and ethnic). Fundamentals of IS project management in the global context. Using globally distributed communication and collaboration platforms. Analysis and specification of system requirements; Data collection methods; Methods for structuring and communicating requirements; Factors affecting user experience; User interface design; System data requirements; Factors affecting security; Ethical considerations in requirements specification. Different approaches to implementing information systems to support business requirements: Packaged systems; enterprise; systems; Outsourced development; In-house development. Specifying implementation alternatives for a specific system. Methods and impact of implementation alternatives on system requirements specification. Different approaches to systems analysis and design: structured SDLC, unified process/UML, agile methods"],
           "File Organization": ["Credits: 3 Hours", "Prerequisites: Object-Oriented Programming",
                                 "Contents: Introduction to the Design and Specification of File Structures − Fundamental File Processing Operations − Fundamental File Structure Concepts − Managing Files of Records − Secondary Storage and System Software − Organizing Files for Performance. Indexing − Multi-Level Indexing and B-Trees − Indexed Sequential File Access and Prefix B+ Trees. Hashing."],
           "Computer Networks": ["Credits: 3 Hours", "Prerequisites: Data Communications,Computer Architecture ",
                                 "MContents: Standards bodies. Switched vs. packets networking. OSI model. Internet model (TCP/IP). Nodes & links. LAN, WAN. Bandwidth, throughput. Components and architectures. Routing and switching. Communication protocols. Application, Transport, and network layers protocols."],
           "Image Processing": ["Credits: 3 Hours", "Prerequisites: Data Structures and Algorithms",
                                "Contents: Scope and applications of image are processing. Perspective transformations (Modeling picture taking, perspective transformations in homogeneous coordinates and with two reference frames). The spatial frequency domain (The sampling theorem, template matching and the convolution theorem, spatial filtering). Enhancement and restoration, image segmentation. Image representation: (Spatial differentiation and smoothing, template matching, region analysis, contour following). Descriptive methods in scene analysis. Hardware and software considerations. Applications."],
           "Software Engineering": ["Credits: 3 Hours", "Prerequisites: Data Structures and Algorithms",
                                    "Contents: Software processes: Software life-cycle and process models; process assessment models; software process metrics. Software requirements and specifications. Software design: Fundamental design concepts and principles; software architecture; structured design; object-oriented analysis and design; component-level design; design for reuse. Software validation: Validation planning; testing fundamentals; unit, integration, validation, and system testing; object-oriented testing; inspections. Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse. Software project management. Component-based computing: Fundamentals; basic techniques; applications; architecture of component-based systems; component-oriented design; event handling; middleware."],
           "Visual Programming": ["Credits: 3 Hours", "Prerequisites: Data Structures and Algorithms",
                                  "Contents: Graphical user interface (GUI), review of concepts, and anatomy of a windows program using different languages. Available developing tools. Keyboard and mouse input, menus creating, adding menus to programs. Dialog boxes: buttons, text, list boxes, grids and spreadsheets. Graphics files and file handling. Multiple documents interfaces and views (MDI). Exception Handling and Debugging. Object Linking and Embedding (OLE)."],
           "Computer Graphics": ["Credits: 3 Hours", "Prerequisites: IT Fundamentals and Discrete Structures",
                                 "Contents: This course introduces techniques for 2D and 3D computer graphics, including simple color models, homogeneous coordinates, affine transformations (scaling, rotation, translation), viewing transformation, clipping, illumination and shading, texture maps, rendering, high level shader language, video display devices, physical and logical input devices, hierarchy of graphics software, hidden surface removal methods, Z-buffer and frame buffer, color channels, and using a graphics API. "],
           "Algorithm Design and Analysis": ["Credits: 3 Hours", "Prerequisites: Data Structures and Algorithms",
                                             "Contents: Review of proof techniques − Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; best, average, and worst case behaviors; big-O, little-o, Ω, and Θ notation; standard complexity classes; empirical measurements of performance; time and space tradeoffs in algorithms; using recurrence relations to analyze recursive algorithms − Algorithmic strategies: branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation − Graph and tree algorithms: Shortest-path algorithms (Dijkstra’s and Floyd’s algorithms); transitive closure (Floyd’s algorithm); minimum spanning tree (Prim’s and Kruskal’s algorithms); topological sort – Dynamic Programming – Randomized Algorithms – NP-complete problems."],
           "Operating Systems": ["Credits: 3 Hours", "Prerequisites: Computer Architecture",
                                 "Contents: Overview: Role and purpose of operating systems; history of operating system development; functionality of a typical operating system; design issues (efficiency, robustness, flexibility, portability, security, compatibility). Basic principles:Structuring methods; abstractions, processes, and resources; device organization; interrupts; user/system state transitions. Concurrency: The idea of concurrent execution; states and state diagrams; implementation structures; dispatching and context switching; interrupt handling in a concurrent environment. Mutual exclusion: Definition of the ―mutual exclusion‖ problem; deadlock detection and prevention; solution strategies; models and mechanisms (semaphores, monitors, condition variables, rendezvous); synchronization; multiprocessor issues. Scheduling: Preemptive and non-preemptive scheduling; scheduling policies; processes and threads; real-time issues. Memory management: Review of physical memory and memory management hardware; overlays, swapping, and partitions; paging and segmentation; page placement and replacement policies; working sets and thrashing; caching. Device management: Characteristics of serial and parallel devices; abstracting device differences; buffering strategies; direct memory access; recovery from failures. File systems: Fundamental concepts (data, metadata, operations, organization, buffering, sequential vs. non-sequential files); content and structure of directories; file system techniques; memory-mapped files; special-purpose file systems; naming, searching, and access; backup strategies. Security and protection: Overview of system security; policy/mechanism separation; security methods and devices; protection, access, and authentication; models of protection; memory protection; encryption; recovery management."],
           "Automata and Language Theory": ["Credits: 3 Hours",
                                            "Prerequisites: Discrete Structures and Programming Fundamentals",
                                            "Contents: introduction: The purpose of automata theory; relationship of automata and languages; the Chomsky hierarchy. Finite automata: Definition of finite automata and their operation; deterministic and nondeterministic automata and their equivalence; two-way finite automata; minimization of deterministic automata. Regular expressions: Relationship of regular expressions and finite automata; Kleene analysis and synthesis theorems; applications of regular expressions. Properties of regular sets: The Myhill-Nerode theorem; the pumping lemma; closure properties; decision algorithms. Context-free grammars: Equivalence and ambiguity of grammars; languages generated by context-free grammars; simplification of context-free grammars; Chomsky and Greibach normal forms; general strategies for top-down and bottom-up parsing. Properties of context-free languages: The pumping lemma for context free languages; closure properties of context-free languages; decision algorithms. Pushdown automata: Languages accepted by pushdown automata; pushdown automata and context-free languages. Linear-bounded automata: Definition and operation; context-sensitive languages; properties of context-sensitive languages. Turing machines: Definitions and introduction to the mechanics of Turing machine operation; the universal Turing machine; the Church-Turing thesis; variations of Turing machines; languages recognized by Turing machines; computable languages; undecidability; the P = NP question."],
           "Advanced Computer Graphics": ["Credits: 3 Hours", "Prerequisites: Computer Graphics",
                                          "Contents: This course will study advanced topics in computer graphics which includes GPU programming, shader languages, modeling natural phenomena, real-time rendering for games, information visualization, geometric optimization, level-of-detail rendering, bi-directional reflectance distribution functions (BRDFs), environment mapping, bump mapping, subdivision surfaces, higher-order surface modeling."],
           "Artificial Intelligence": ["Credits: 3 Hours", "Prerequisites: IT Fundamentals and Discrete Structures",
                                       "Contents: Fundamental issues in intelligent systems  History of artificial intelligence  Agents: Definition of agents; successful applications and state-of-the-art agent-based systems; software agents, personal assistants, and information access; multi-agent systems  Modeling the world; the role of heuristics  Search and constraint satisfaction  Knowledge representation and reasoning  Advanced search: Genetic algorithms; simulated annealing; local search  Advanced knowledge representation and reasoning  Structured representation; nonmonotonic reasoning; reasoning on action and change  AI planning systems: Definition and examples of planning systems; planning as search; operator-based planning; propositional planning."],
           "Software Development and Professional Practice": ["Credits: 3 Hours", "Prerequisites: Software Engineering",
                                                              "MContents: Event-driven programming  Foundations of human-computer interaction  Using APIs  Building a graphical user interface  Graphic systems  Professional issues of software processes including software requirements and specifications; Software design; Software validation; Software evolution  Software project management  Methods and tools of analysis  Professional and ethical responsibilities  Risks and liabilities of computer-based systems."],
           "Field Training": ["Credits: 3 Hours", "Prerequisites: Project Management",
                              "Contents: Students should interact with the society to what they can and should expect from people professionally trained in the information systems discipline. The private and public sectors can support the education process by encouraging them to play a greater role in helping to train students. By laying the this training as part of an undergraduate program, students can avoid the sense of isolation from the computing field work in the society that young professionals often feel and be well equipped to practice their profession in a mature way."],
           "Compiler Construction": ["Credits: 3 Hours",
                                     "Prerequisites: Data Structures and Algorithms, Visual Programming and Computer Architecture",
                                     "Contents: Compiler Functions, Language Elements − BNF Grammars, Regular Expressions, Finite State Machines, Lexical Analyzers − Context Free Grammars, Grammar Ambiguity, Parse Trees, Push Down Automata − Parsing Methods; Top-Down, Recursive Descent, LL, LR − Symbol Table Construction, Type Checking − Code Generation − Handling Recursion and Arrays − Code Optimization Techniques."],
           "Capstone Project I": ["Credits: 3 Hours",
                                  "Prerequisites: Project Management and Software Development and Professional Practice",
                                  "Contents: Computer Science Capstone Project I course will provide coverage of some of the material from the body of knowledge, such as: Foundations of human-computer interaction  Graphical user-interface design  Graphical user-interface programming  Software design  Using APIs  Software tools and environments  Software processes  Software requirements and specifications  Software validation  Software evolution  Software project management  Team management  Communications skills. The focus of the course must remain on the project, which gives students the chance to reinforce through practice the concepts they have learned earlier in a more theoretical way."],
           "Introduction to Computer Security": ["Credits: 3 Hours",
                                                 "Prerequisites: Computer Networks and Data Structures and Algorithms",
                                                 "Contents: Security Goals, Fundamentals (confidentiality, integrity, availability, etc.). Introduction to risk assessment and management. Security standards in government and industry. Computer system protection principles (UNIX and Windows). Access controls, including MAC, DAC, and role-based. Cryptography fundamentals. Authentication, passwords, introduction to protocols, Kerberos. Security operations. Attacks: software attacks, malicious code, buffer overflows, social engineering, injection attacks, and related defense tools. Network attacks: Denial of service, flooding, sniffing and traffic redirection, defense tools and strategies. Attacking web sites: cross-site scripting. IPSec, Virtual Private networks and Network Address Translation. Ethics, SP issues that are related. Introduction to Forensics."],
           "Web Programming": ["Credits: 3 Hours", "Prerequisites: Data Communications and Programming Fundamentals",
                               "Contents: The fundamental technologies behind the Web. Concepts of Web Programming both client-side and server-side. HTML and CSS Web page development. Fundamentals of Server side scripting language such PHP. Fundamentals of Client side scripting language such as JavaScript."],
           "Computer Vision": ["Credits: 3 Hours",
                               "Prerequisites: Prerequisites: Physics II and Object-Oriented Programming",
                               "Contents: An introduction to the concepts and applications in computer vision. Topics include: cameras and projection models, low-level image processing methods such as filtering and edge detection; mid-level vision topics such as segmentation and clustering; shape reconstruction from stereo, as well as high-level vision tasks such as object recognition, scene recognition, face detection and human motion categorization. Applications such as scene reconstruction and tracking."],
           "Network Programming": ["Credits: 3 Hours", "Prerequisites: Computer Networks",
                                   "Contents: Programming aspects of computer networks. Computer networks and communication protocols, socket programming, inter-process communication, and development of network software."],
           "Capstone Project II": ["Credits: 3 Hours", "Prerequisites: Capstone Project I",
                                   "Contents: Computer Science Capstone Project II course gives the student more practical and professional skills in developing a project."],
           "Machine Learning": ["Credits: 3 Hours", "Prerequisites: Artificial Intelligence",
                                "Contents: Introduction to machine learning  Definition and examples of machine learning  Supervised learning (of classification and regression functions); K-nearest neighbors, decision trees, naïve Bayes, support vector machines, logistic regression, evolutionary algorithms, Bayesian Networks, hidden Markov model, neural networks, boosting  Unsupervised learning and clustering K-means, hierarchical clustering (agglomerative and divisive), principal component analysis, independent component analysis, Expectation Maximization algorithm  Reinforcement learning  Kernel methods  Sparse kernel machines  Mixture models and the EM algorithm  Combining multiple learners."],
           "Cryptography": ["Credits: 3 Hours", "Prerequisites: Computer Networks and Data Structures and Algorithms",
                            "Contents: Introduction − Secret-Sharing − Defining Encryption − Symmetric-Key Encryption − Public-Key Encryption − Hash functions, Digital Signatures − Key Exchange − Secure Communication Protocols − Homomorphic Encryption − Private Information Retrieval − Attribute-based Cryptography − Pairing-based Cryptography − Formal Methods in Cryptography − Private Set Intersection − Signatures."],
           "Parallel Computation": ["Credits: 3 Hours",
                                    "Prerequisites: Algorithm Design and Analysis and operating Systems",
                                    "Contents: Introduction to parallel computing − Models of parallel computers − Data and task parallelism − Shared and Distributed memory parallel machine architecture concepts − Interconnection networks − Basics of threaded parallel computation− Parallel algorithmic design − Languages and libraries for threaded parallel programming − Languages and libraries for distributed memory parallel programming − Co-processor techniques including GPU and FPGA − Experimental techniques − Measuring performance and computing speed-up."],
           "Computer Animation": ["Credits: 3 Hours", "Prerequisites: without",
                                  "Contents: Basics of key-frame animation, camera animation, forward and inverse kinematics, particle systems, rigid body simulation, flocking, autonomous behavior, modeling natural phenomena such as water and gases, animation of articulated structures, facial animation, clothes, scripting system, morphing, motion capture, and deformation."],
           "Advanced Database": ["Credits: 3 Hours", "Prerequisites: Database",
                                 "Contents: Data and database administration: Transaction processing; Using a database management system from an application development environment; Use of database management systems in an enterprise system context; Data / information architecture; Data security management. Basic data security principles. Data security implementation: Data quality management. Data quality audits. Data quality improvement: Business intelligence. On-line analytic processing. Data warehousing."]}

# ------------------------------^^ Courses Discription ^^------------------------------- #
def getCoursesDescrition():
    name = []
    credit = []
    pre = []
    cont = []
    for i in courses:
        name.append(i)
        if type(courses[i]) == list:
            sub = courses[i]
            credit.append(sub[0])
            pre.append(sub[1])
            cont.append(sub[2])
    all_Disc = [name, credit, pre, cont]
    return all_Disc
# ------------------------------^^ Credit Hours ^^------------------------------- #
def getCredithours():
    name = []
    hour = []
    for i in courses:
        name.append(i)
        if type(courses[i]) == list:
            sub = courses[i]
            hour.append(sub[0][9])  # TODO: [ When Connecting with firebase Will Change SUb.length ]
    credits_h = dict(zip(name, hour))
    # print(credits_h)
    return credits_h
getCoursesDescrition()
getCredithours()
